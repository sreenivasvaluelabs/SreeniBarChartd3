{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Downloads\\\\SREENID3\\\\SreeniBarChartd3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\SREENID3\\\\SreeniBarChartd3\\\\src\\\\ChartWrapper.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport D3Chart from './D3Chart';\n\nconst ChartWrapper = ({\n  gender\n}) => {\n  const chartArea = useRef(null);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        chart = _useState2[0],\n        setChart = _useState2[1];\n\n  useEffect(() => {\n    if (!chart) {\n      setChart(new D3Chart(chartArea.current));\n    } // skip the loading state, when data is still a pending promise\n    else if (chart.menData) {\n        chart.update(gender);\n      }\n  }, [chart, gender]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-area\",\n    ref: chartArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default ChartWrapper;","map":{"version":3,"sources":["C:/Users/HP/Downloads/SREENID3/SreeniBarChartd3/src/ChartWrapper.js"],"names":["React","useRef","useState","useEffect","D3Chart","ChartWrapper","gender","chartArea","chart","setChart","current","menData","update"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;;AADoC,oBAEVC,QAAQ,CAAC,IAAD,CAFE;AAAA;AAAA,QAE7BM,KAF6B;AAAA,QAEtBC,QAFsB;;AAIpCN,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACK,KAAL,EAAY;AACXC,MAAAA,QAAQ,CAAC,IAAIL,OAAJ,CAAYG,SAAS,CAACG,OAAtB,CAAD,CAAR;AACA,KAFD,CAGA;AAHA,SAIK,IAAIF,KAAK,CAACG,OAAV,EAAmB;AACvBH,QAAAA,KAAK,CAACI,MAAN,CAAaN,MAAb;AACA;AACD,GARQ,EAQN,CAACE,KAAD,EAAQF,MAAR,CARM,CAAT;AAUA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAGA,CAjBD;;AAmBA,eAAeF,YAAf","sourcesContent":["\nimport React, { useRef, useState, useEffect } from 'react';\nimport D3Chart from './D3Chart';\n\nconst ChartWrapper = ({ gender }) => {\n\tconst chartArea = useRef(null)\n\tconst [chart, setChart] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (!chart) {\n\t\t\tsetChart(new D3Chart(chartArea.current))\n\t\t}\n\t\t// skip the loading state, when data is still a pending promise\n\t\telse if (chart.menData) {\n\t\t\tchart.update(gender)\n\t\t}\n\t}, [chart, gender])\n\n\treturn (\n\t\t<div className=\"chart-area\" ref={chartArea}></div>\n\t)\n}\n\nexport default ChartWrapper"]},"metadata":{},"sourceType":"module"}