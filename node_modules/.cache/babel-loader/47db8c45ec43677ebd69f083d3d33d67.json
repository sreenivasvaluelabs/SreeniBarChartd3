{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\HP\\\\Downloads\\\\SREENID3\\\\SreeniBarChartd3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import D3Chart from'./D3Chart';const ChartWrapper=({gender})=>{const chartArea=useRef(null);const _useState=useState(null),_useState2=_slicedToArray(_useState,2),chart=_useState2[0],setChart=_useState2[1];useEffect(()=>{if(!chart){setChart(new D3Chart(chartArea.current));}// skip the loading state, when data is still a pending promise\nelse if(chart.menData){chart.update(gender);}},[chart,gender]);return/*#__PURE__*/React.createElement(\"div\",{className:\"chart-area\",ref:chartArea});};export default ChartWrapper;","map":{"version":3,"sources":["C:/Users/HP/Downloads/SREENID3/SreeniBarChartd3/src/ChartWrapper.js"],"names":["React","useRef","useState","useEffect","D3Chart","ChartWrapper","gender","chartArea","chart","setChart","current","menData","update"],"mappings":"gLACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,KAAMC,CAAAA,YAAY,CAAG,CAAC,CAAEC,MAAF,CAAD,GAAgB,CACpC,KAAMC,CAAAA,SAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CADoC,gBAEVC,QAAQ,CAAC,IAAD,CAFE,wCAE7BM,KAF6B,eAEtBC,QAFsB,eAIpCN,SAAS,CAAC,IAAM,CACf,GAAI,CAACK,KAAL,CAAY,CACXC,QAAQ,CAAC,GAAIL,CAAAA,OAAJ,CAAYG,SAAS,CAACG,OAAtB,CAAD,CAAR,CACA,CACD;AAHA,IAIK,IAAIF,KAAK,CAACG,OAAV,CAAmB,CACvBH,KAAK,CAACI,MAAN,CAAaN,MAAb,EACA,CACD,CARQ,CAQN,CAACE,KAAD,CAAQF,MAAR,CARM,CAAT,CAUA,mBACC,2BAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAEC,SAAjC,EADD,CAGA,CAjBD,CAmBA,cAAeF,CAAAA,YAAf","sourcesContent":["\nimport React, { useRef, useState, useEffect } from 'react';\nimport D3Chart from './D3Chart';\n\nconst ChartWrapper = ({ gender }) => {\n\tconst chartArea = useRef(null)\n\tconst [chart, setChart] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (!chart) {\n\t\t\tsetChart(new D3Chart(chartArea.current))\n\t\t}\n\t\t// skip the loading state, when data is still a pending promise\n\t\telse if (chart.menData) {\n\t\t\tchart.update(gender)\n\t\t}\n\t}, [chart, gender])\n\n\treturn (\n\t\t<div className=\"chart-area\" ref={chartArea}></div>\n\t)\n}\n\nexport default ChartWrapper"]},"metadata":{},"sourceType":"module"}